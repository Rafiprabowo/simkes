CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "first_name" varchar not null, "last_name" varchar not null, "username" varchar not null, "email" varchar not null, "address" varchar not null, "phone" varchar not null, "password" varchar not null, "role" varchar check ("role" in ('admin', 'pegawai', 'dokter', 'apoteker')), "remember_token" varchar, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "users_username_unique" on "users" ("username");
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "doctors" ("id" integer primary key autoincrement not null, "speciality_id" integer, "created_at" datetime, "updated_at" datetime, "user_id" integer not null, "gender" varchar check ("gender" in ('L', 'P')) not null);
CREATE TABLE IF NOT EXISTS "appointments" ("id" integer primary key autoincrement not null, "appointment_date" date not null, "appointment_start_time" datetime not null, "appointment_end_time" datetime not null, "note" text, "alergi_obat" text, "status" varchar check ("status" in ('pending', 'approved', 'rejected', 'cancelled')) not null default 'pending', "created_at" datetime, "updated_at" datetime, "diagnosed" tinyint(1) not null default '0', "doctor_id" integer not null, "employee_id" integer not null);
CREATE TABLE IF NOT EXISTS "employees" ("id" integer primary key autoincrement not null, "position" varchar, "date_of_birth" date, "gender" varchar check ("gender" in ('L', 'P')), "medical_history" varchar, "emergency_contact_name" varchar, "emergency_contact_number" varchar, "emergency_contact_relationship" varchar, "emergency_contact_address" varchar, "created_at" datetime, "updated_at" datetime, "user_id" integer not null);
CREATE TABLE IF NOT EXISTS "diagnoses" ("id" integer primary key autoincrement not null, "diagnosa" text not null, "appointment_id" integer not null, "created_at" datetime, "updated_at" datetime, "employee_id" integer not null, "doctor_id" integer not null, foreign key("appointment_id") references "appointments"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "admins" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "user_id" integer not null, "gender" varchar check ("gender" in ('L', 'P')) not null);
CREATE TABLE IF NOT EXISTS "pharmacists" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "user_id" integer not null, "gender" varchar check ("gender" in ('L', 'P')) not null);
CREATE TABLE IF NOT EXISTS "medicines" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" varchar not null, "stock" integer not null, "satuan" varchar not null, "category_id" integer not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "medicines_name_unique" on "medicines" ("name");
CREATE TABLE IF NOT EXISTS "medicine_categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "medicine_categories_name_unique" on "medicine_categories" ("name");
CREATE TABLE IF NOT EXISTS "notifications" ("id" varchar not null, "type" varchar not null, "notifiable_type" varchar not null, "notifiable_id" integer not null, "data" text not null, "read_at" datetime, "created_at" datetime, "updated_at" datetime, primary key ("id"));
CREATE INDEX "notifications_notifiable_type_notifiable_id_index" on "notifications" ("notifiable_type", "notifiable_id");
CREATE TABLE IF NOT EXISTS "doctor_schedules" ("id" integer primary key autoincrement not null, "doctor_id" integer not null, "date" varchar not null, "start_time" datetime not null, "end_time" datetime not null, "status" varchar check ("status" in ('available', 'reserved', 'cancelled')) not null default 'available', "employee_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("doctor_id") references "doctors"("id"), foreign key("employee_id") references "employees"("id"));
CREATE UNIQUE INDEX "doctor_schedules_doctor_id_start_time_end_time_unique" on "doctor_schedules" ("doctor_id", "start_time", "end_time");
CREATE TABLE IF NOT EXISTS "doctor_specializations" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" varchar, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "doctor_specializations_name_unique" on "doctor_specializations" ("name");
CREATE TABLE IF NOT EXISTS "pemeriksaan_minors" ("id" integer primary key autoincrement not null, "name" varchar not null, "is_gender_oriented" tinyint(1) not null default '0', "id_pemeriksaan_major" integer, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "medical_check_ups" ("id" integer primary key autoincrement not null, "date" date not null, "created_at" datetime, "updated_at" datetime, "id_employee" integer not null, "id_doctor" integer not null, "status" tinyint(1) not null default '0');
CREATE TABLE IF NOT EXISTS "detail_pemeriksaans" ("id_medical_check_up" integer not null, "id_pemeriksaan_minor" integer not null, "result" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("id_medical_check_up") references "medical_check_ups"("id") on delete cascade, foreign key("id_pemeriksaan_minor") references "pemeriksaan_minors"("id") on delete cascade, primary key ("id_medical_check_up", "id_pemeriksaan_minor"));
CREATE TABLE IF NOT EXISTS "nilai_rujukans" ("id" integer primary key autoincrement not null, "id_pemeriksaan_minor" integer not null, "gender" varchar check ("gender" in ('L', 'P')) not null, "reference_value" varchar not null, "satuan" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("id_pemeriksaan_minor") references "pemeriksaan_minors"("id") on delete cascade on update cascade);
CREATE TABLE IF NOT EXISTS "pemeriksaan_majors" ("id" integer primary key autoincrement not null, "name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "pemeriksaan_majors_name_unique" on "pemeriksaan_majors" ("name");
CREATE TABLE IF NOT EXISTS "detail_diagnosas" ("id_diagnosis" integer not null, "id_medicine" integer not null, "dosis_obat" varchar not null, "created_at" datetime, "updated_at" datetime, "jumlah" integer not null, foreign key("id_diagnosis") references "diagnoses"("id"), foreign key("id_medicine") references "medicines"("id"), primary key ("id_diagnosis", "id_medicine"));
INSERT INTO migrations VALUES(1,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_100000_create_password_reset_tokens_table',1);
INSERT INTO migrations VALUES(3,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(4,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(5,'2024_06_07_033353_create_doctors_table',1);
INSERT INTO migrations VALUES(6,'2024_06_07_033932_create_appointments_table',1);
INSERT INTO migrations VALUES(7,'2024_06_07_034000_create_employees_table',1);
INSERT INTO migrations VALUES(8,'2024_06_09_111835_create_diagnoses_table',1);
INSERT INTO migrations VALUES(9,'2024_06_10_140419_create_admins_table',1);
INSERT INTO migrations VALUES(10,'2024_06_11_034940_create_pharmacists_table',1);
INSERT INTO migrations VALUES(11,'2024_06_11_041321_create_medicines_table',1);
INSERT INTO migrations VALUES(12,'2024_06_11_041725_create_medicine_categories_table',1);
INSERT INTO migrations VALUES(13,'2024_06_22_204025_create_notifications_table',1);
INSERT INTO migrations VALUES(14,'2024_06_23_105017_create_doctor_schedules_table',1);
INSERT INTO migrations VALUES(15,'2024_06_23_192120_create_doctor_specializations_table',1);
INSERT INTO migrations VALUES(16,'2024_06_23_213733_add_foreign_doctor_specializations',1);
INSERT INTO migrations VALUES(17,'2024_06_26_105403_create_pemeriksaan_minors_table',1);
INSERT INTO migrations VALUES(18,'2024_06_26_105447_create_medical_check_ups_table',1);
INSERT INTO migrations VALUES(19,'2024_06_26_105645_create_detail_pemeriksaans_table',1);
INSERT INTO migrations VALUES(20,'2024_06_27_095144_create_nilai_rujukans_table',1);
INSERT INTO migrations VALUES(21,'2024_06_27_161443_create_pemeriksaan_majors_table',1);
INSERT INTO migrations VALUES(22,'2024_06_27_165517_add_id_pemeriksaan_major_to_pemeriksaan_minors_table',1);
INSERT INTO migrations VALUES(23,'2024_06_28_182204_create_detail_diagnosas_table',1);
INSERT INTO migrations VALUES(24,'2024_06_29_221708_add_jumlah_to_detail_diagnosas',1);
INSERT INTO migrations VALUES(25,'2024_06_29_222154_add_employee_id_and_doctor_id_to_diagnoses_table',1);
INSERT INTO migrations VALUES(26,'2024_06_29_225202_add_diagnosed_column_to_appointments',1);
INSERT INTO migrations VALUES(27,'2024_06_30_184725_add_user_id_to_doctors_table',1);
INSERT INTO migrations VALUES(28,'2024_06_30_184824_add_user_id_to_employees_table',1);
INSERT INTO migrations VALUES(29,'2024_06_30_185005_add_user_id_to_pharmachists_table',1);
INSERT INTO migrations VALUES(30,'2024_06_30_185052_add_user_id_to_admins_table',1);
INSERT INTO migrations VALUES(31,'2024_06_30_192914_add_employee_id_doctor_id_to_appointments_table',1);
INSERT INTO migrations VALUES(32,'2024_06_30_193158_add_employee_id_doctor_id_to_medical_check_ups_table',1);
INSERT INTO migrations VALUES(33,'2024_07_01_004310_add_gender_to_admins_table',1);
INSERT INTO migrations VALUES(34,'2024_07_01_015812_add_gender_to_pharmacist_table',1);
INSERT INTO migrations VALUES(35,'2024_07_01_020433_add_gender_to_doctors_table',1);
INSERT INTO migrations VALUES(36,'2024_07_02_074724_add_status_to_medical_check_ups_table',1);
